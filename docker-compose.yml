services:
  # üêò Database
  db:
    image: postgres:15-alpine
    env_file:
      - ./backend/.env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB} -h localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # üêç Django backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    env_file:
      - ./backend/.env
    environment:
      DB_HOST: db
      DB_PORT: "5432"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      # ‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö STATIC_ROOT ‡πÅ‡∏•‡∏∞ MEDIA_ROOT ‡πÉ‡∏ô settings.py (‡πÑ‡∏°‡πà‡πÅ‡∏Å‡πâ settings)
      - ./static:/app/staticfiles           # ‡∏î‡∏π‡πÑ‡∏ü‡∏•‡πå static ‡∏ó‡∏µ‡πà collectstatic ‡πÑ‡∏î‡πâ‡∏à‡∏≤‡∏Å host
      - ./media:/app/mediafiles             # media ‡∏à‡∏∞‡∏°‡∏≤‡∏≠‡∏¢‡∏π‡πà‡∏ó‡∏µ‡πà ./media ‡∏ö‡∏ô‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á
    restart: on-failure

  # üíª Frontend (build ‡πÅ‡∏•‡πâ‡∏ß‡πÅ‡∏ä‡∏£‡πå dist ‡πÉ‡∏´‡πâ nginx)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    image: frontend
    volumes:
      - frontend_dist:/app/dist             # ‡∏™‡πà‡∏á‡∏≠‡∏≠‡∏Å dist ‡∏•‡∏á volume ‡∏ô‡∏µ‡πâ
    # ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏£‡∏±‡∏ô tail; ‡πÉ‡∏´‡πâ‡∏Ñ‡∏≠‡∏ô‡πÄ‡∏ó‡∏ô‡πÄ‡∏ô‡∏≠‡∏£‡πå‡∏à‡∏ö‡∏´‡∏•‡∏±‡∏á build ‡∏Å‡πá‡πÑ‡∏î‡πâ

  # üåê Nginx
  nginx:
    image: nginx:alpine
    depends_on:
      - backend
      - frontend
    ports:
      - "80:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      # ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö alias /static/ ‡πÅ‡∏•‡∏∞ /media/ ‡πÉ‡∏ô nginx.conf
      - ./static:/static:ro
      - ./media:/media:ro
      # ‡πÄ‡∏™‡∏¥‡∏£‡πå‡∏ü frontend dist
      - frontend_dist:/usr/share/nginx/html:ro
    restart: unless-stopped

volumes:
  postgres_data:
  frontend_dist: